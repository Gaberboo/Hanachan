use std::f32::consts::PI;

pub trait F32Ext {
    fn wii_sqrt(self) -> Self;
    fn wii_sin(self) -> Self;
    fn wii_cos(self) -> Self;
}

impl F32Ext for f32 {
    fn wii_sqrt(self) -> f32 {
        fn ppc_frsqrte(val: f64) -> f64 {
            let bits = val.to_bits();
            let mut mantissa = bits & ((1 << 52) - 1);
            let sign = bits & 1 << 63;
            let mut exponent = bits & 0x7ff << 52;

            // Special case 0
            if mantissa == 0 && exponent == 0 {
                return val.signum() * f64::MAX;
            }

            // Special case NaN-ish numbers
            if exponent == 0x7ff << 52 {
                if mantissa == 0 {
                    if sign != 0 {
                        return f64::NAN;
                    }
                    return 0.0;
                }
                return 0.0 + val;
            }

            // Negative numbers return NaN
            if sign != 0 {
                return f64::NAN;
            }

            if exponent == 0 {
                // "Normalize" denormal values
                while mantissa & 1 << 52 == 0 {
                    exponent -= 1 << 52;
                    mantissa <<= 1;
                }
                mantissa &= (1 << 52) - 1;
                exponent += 1 << 52;
            }

            let odd_exponent = exponent & 1 << 52 == 0;
            exponent = ((0x3ff << 52) - ((exponent - (0x3fe << 52)) / 2)) & (0x7ff << 52);
            let mut bits = sign | exponent;

            let i = mantissa >> 37;
            let mut idx = (i / 2048) as usize;
            if odd_exponent {
                idx += 16;
            }
            bits |= (FRSQRTE_BASES[idx] - FRSQRTE_DECS[idx] * (i % 2048)) << 26;

            f64::from_bits(bits)
        }

        fn f64_25_bit_mantissa(val: f64) -> f64 {
            let bits = val.to_bits();
            let bits = (bits & 0xfffffffff8000000) + (bits & 0x8000000);
            f64::from_bits(bits)
        }

        if self <= 0.0 {
            0.0
        } else {
            let recip_sqrt = ppc_frsqrte(self as f64);
            let tmp0 = (recip_sqrt * f64_25_bit_mantissa(recip_sqrt)) as f32;
            let tmp1 = (recip_sqrt * 0.5) as f32;
            let tmp2 = (3.0 - tmp0 as f64 * self as f64) as f32;
            tmp1 * tmp2 * self
        }
    }

    fn wii_sin(self) -> f32 {
        let step = 256.0 / (2.0 * PI);
        let mut f_idx = (self * step).abs();
        while f_idx > 65536.0 {
            f_idx -= 65536.0;
        }
        let idx = f_idx as usize % 256;
        self.signum() * (TRIG_TABLE[idx][0] + f_idx.fract() * TRIG_TABLE[idx][2])
    }

    fn wii_cos(self) -> f32 {
        let step = 256.0 / (2.0 * PI);
        let mut f_idx = (self * step).abs();
        while f_idx > 65536.0 {
            f_idx -= 65536.0;
        }
        let idx = f_idx as usize % 256;
        TRIG_TABLE[idx][1] + f_idx.fract() * TRIG_TABLE[idx][3]
    }
}

const FRSQRTE_BASES: [u64; 32] = [
    0x3ffa000, 0x3c29000, 0x38aa000, 0x3572000, 0x3279000, 0x2fb7000, 0x2d26000, 0x2ac0000,
    0x2881000, 0x2665000, 0x2468000, 0x2287000, 0x20c1000, 0x1f12000, 0x1d79000, 0x1bf4000,
    0x1a7e800, 0x17cb800, 0x1552800, 0x130c000, 0x10f2000, 0x0eff000, 0x0d2e000, 0x0b7c000,
    0x09e5000, 0x0867000, 0x06ff000, 0x05ab800, 0x046a000, 0x0339800, 0x0218800, 0x0105800,
];

const FRSQRTE_DECS: [u64; 32] = [
    0x7a4, 0x700, 0x670, 0x5f2, 0x584, 0x524, 0x4cc, 0x47e, 0x43a, 0x3fa, 0x3c2, 0x38e, 0x35e,
    0x332, 0x30a, 0x2e6, 0x568, 0x4f3, 0x48d, 0x435, 0x3e7, 0x3a2, 0x365, 0x32e, 0x2fc, 0x2d0,
    0x2a8, 0x283, 0x261, 0x243, 0x226, 0x20b,
];

const TRIG_TABLE: [[f32; 4]; 256] = [
    [0.0, 1.0, 0.024541, -0.000301],
    [0.024541, 0.999699, 0.024526, -0.000903],
    [0.049068, 0.998795, 0.024497, -0.001505],
    [0.073565, 0.99729, 0.024453, -0.002106],
    [0.098017, 0.995185, 0.024394, -0.002705],
    [0.122411, 0.99248, 0.02432, -0.003303],
    [0.14673, 0.989177, 0.024231, -0.003899],
    [0.170962, 0.985278, 0.024128, -0.004492],
    [0.19509, 0.980785, 0.024011, -0.005083],
    [0.219101, 0.975702, 0.023879, -0.005671],
    [0.24298, 0.970031, 0.023733, -0.006255],
    [0.266713, 0.963776, 0.023572, -0.006836],
    [0.290285, 0.95694, 0.023397, -0.007412],
    [0.313682, 0.949528, 0.023208, -0.007984],
    [0.33689, 0.941544, 0.023005, -0.008551],
    [0.359895, 0.932993, 0.022788, -0.009113],
    [0.382683, 0.92388, 0.022558, -0.00967],
    [0.405241, 0.91421, 0.022314, -0.01022],
    [0.427555, 0.903989, 0.022056, -0.010765],
    [0.449611, 0.893224, 0.021785, -0.011303],
    [0.471397, 0.881921, 0.021501, -0.011834],
    [0.492898, 0.870087, 0.021205, -0.012358],
    [0.514103, 0.857729, 0.020895, -0.012875],
    [0.534998, 0.844854, 0.020573, -0.013384],
    [0.55557, 0.83147, 0.020238, -0.013885],
    [0.575808, 0.817585, 0.019891, -0.014377],
    [0.595699, 0.803208, 0.019532, -0.014861],
    [0.615232, 0.788346, 0.019162, -0.015336],
    [0.634393, 0.77301, 0.01878, -0.015802],
    [0.653173, 0.757209, 0.018386, -0.016258],
    [0.671559, 0.740951, 0.017982, -0.016704],
    [0.689541, 0.724247, 0.017566, -0.01714],
    [0.707107, 0.707107, 0.01714, -0.017566],
    [0.724247, 0.689541, 0.016704, -0.017982],
    [0.740951, 0.671559, 0.016258, -0.018386],
    [0.757209, 0.653173, 0.015802, -0.01878],
    [0.77301, 0.634393, 0.015336, -0.019162],
    [0.788346, 0.615232, 0.014861, -0.019532],
    [0.803208, 0.595699, 0.014377, -0.019891],
    [0.817585, 0.575808, 0.013885, -0.020238],
    [0.83147, 0.55557, 0.013384, -0.020573],
    [0.844854, 0.534998, 0.012875, -0.020895],
    [0.857729, 0.514103, 0.012358, -0.021205],
    [0.870087, 0.492898, 0.011834, -0.021501],
    [0.881921, 0.471397, 0.011303, -0.021785],
    [0.893224, 0.449611, 0.010765, -0.022056],
    [0.903989, 0.427555, 0.01022, -0.022314],
    [0.91421, 0.405241, 0.00967, -0.022558],
    [0.92388, 0.382683, 0.009113, -0.022788],
    [0.932993, 0.359895, 0.008551, -0.023005],
    [0.941544, 0.33689, 0.007984, -0.023208],
    [0.949528, 0.313682, 0.007412, -0.023397],
    [0.95694, 0.290285, 0.006836, -0.023572],
    [0.963776, 0.266713, 0.006255, -0.023733],
    [0.970031, 0.24298, 0.005671, -0.023879],
    [0.975702, 0.219101, 0.005083, -0.024011],
    [0.980785, 0.19509, 0.004492, -0.024128],
    [0.985278, 0.170962, 0.003899, -0.024231],
    [0.989177, 0.14673, 0.003303, -0.02432],
    [0.99248, 0.122411, 0.002705, -0.024394],
    [0.995185, 0.098017, 0.002106, -0.024453],
    [0.99729, 0.073565, 0.001505, -0.024497],
    [0.998795, 0.049068, 0.000903, -0.024526],
    [0.999699, 0.024541, 0.000301, -0.024541],
    [1.0, 0.0, -0.000301, -0.024541],
    [0.999699, -0.024541, -0.000903, -0.024526],
    [0.998795, -0.049068, -0.001505, -0.024497],
    [0.99729, -0.073565, -0.002106, -0.024453],
    [0.995185, -0.098017, -0.002705, -0.024394],
    [0.99248, -0.122411, -0.003303, -0.02432],
    [0.989177, -0.14673, -0.003899, -0.024231],
    [0.985278, -0.170962, -0.004492, -0.024128],
    [0.980785, -0.19509, -0.005083, -0.024011],
    [0.975702, -0.219101, -0.005671, -0.023879],
    [0.970031, -0.24298, -0.006255, -0.023733],
    [0.963776, -0.266713, -0.006836, -0.023572],
    [0.95694, -0.290285, -0.007412, -0.023397],
    [0.949528, -0.313682, -0.007984, -0.023208],
    [0.941544, -0.33689, -0.008551, -0.023005],
    [0.932993, -0.359895, -0.009113, -0.022788],
    [0.92388, -0.382683, -0.00967, -0.022558],
    [0.91421, -0.405241, -0.01022, -0.022314],
    [0.903989, -0.427555, -0.010765, -0.022056],
    [0.893224, -0.449611, -0.011303, -0.021785],
    [0.881921, -0.471397, -0.011834, -0.021501],
    [0.870087, -0.492898, -0.012358, -0.021205],
    [0.857729, -0.514103, -0.012875, -0.020895],
    [0.844854, -0.534998, -0.013384, -0.020573],
    [0.83147, -0.55557, -0.013885, -0.020238],
    [0.817585, -0.575808, -0.014377, -0.019891],
    [0.803208, -0.595699, -0.014861, -0.019532],
    [0.788346, -0.615232, -0.015336, -0.019162],
    [0.77301, -0.634393, -0.015802, -0.01878],
    [0.757209, -0.653173, -0.016258, -0.018386],
    [0.740951, -0.671559, -0.016704, -0.017982],
    [0.724247, -0.689541, -0.01714, -0.017566],
    [0.707107, -0.707107, -0.017566, -0.01714],
    [0.689541, -0.724247, -0.017982, -0.016704],
    [0.671559, -0.740951, -0.018386, -0.016258],
    [0.653173, -0.757209, -0.01878, -0.015802],
    [0.634393, -0.77301, -0.019162, -0.015336],
    [0.615232, -0.788346, -0.019532, -0.014861],
    [0.595699, -0.803208, -0.019891, -0.014377],
    [0.575808, -0.817585, -0.020238, -0.013885],
    [0.55557, -0.83147, -0.020573, -0.013384],
    [0.534998, -0.844854, -0.020895, -0.012875],
    [0.514103, -0.857729, -0.021205, -0.012358],
    [0.492898, -0.870087, -0.021501, -0.011834],
    [0.471397, -0.881921, -0.021785, -0.011303],
    [0.449611, -0.893224, -0.022056, -0.010765],
    [0.427555, -0.903989, -0.022314, -0.01022],
    [0.405241, -0.91421, -0.022558, -0.00967],
    [0.382683, -0.92388, -0.022788, -0.009113],
    [0.359895, -0.932993, -0.023005, -0.008551],
    [0.33689, -0.941544, -0.023208, -0.007984],
    [0.313682, -0.949528, -0.023397, -0.007412],
    [0.290285, -0.95694, -0.023572, -0.006836],
    [0.266713, -0.963776, -0.023733, -0.006255],
    [0.24298, -0.970031, -0.023879, -0.005671],
    [0.219101, -0.975702, -0.024011, -0.005083],
    [0.19509, -0.980785, -0.024128, -0.004492],
    [0.170962, -0.985278, -0.024231, -0.003899],
    [0.14673, -0.989177, -0.02432, -0.003303],
    [0.122411, -0.99248, -0.024394, -0.002705],
    [0.098017, -0.995185, -0.024453, -0.002106],
    [0.073565, -0.99729, -0.024497, -0.001505],
    [0.049068, -0.998795, -0.024526, -0.000903],
    [0.024541, -0.999699, -0.024541, -0.000301],
    [0.0, -1.0, -0.024541, 0.000301],
    [-0.024541, -0.999699, -0.024526, 0.000903],
    [-0.049068, -0.998795, -0.024497, 0.001505],
    [-0.073565, -0.99729, -0.024453, 0.002106],
    [-0.098017, -0.995185, -0.024394, 0.002705],
    [-0.122411, -0.99248, -0.02432, 0.003303],
    [-0.14673, -0.989177, -0.024231, 0.003899],
    [-0.170962, -0.985278, -0.024128, 0.004492],
    [-0.19509, -0.980785, -0.024011, 0.005083],
    [-0.219101, -0.975702, -0.023879, 0.005671],
    [-0.24298, -0.970031, -0.023733, 0.006255],
    [-0.266713, -0.963776, -0.023572, 0.006836],
    [-0.290285, -0.95694, -0.023397, 0.007412],
    [-0.313682, -0.949528, -0.023208, 0.007984],
    [-0.33689, -0.941544, -0.023005, 0.008551],
    [-0.359895, -0.932993, -0.022788, 0.009113],
    [-0.382683, -0.92388, -0.022558, 0.00967],
    [-0.405241, -0.91421, -0.022314, 0.01022],
    [-0.427555, -0.903989, -0.022056, 0.010765],
    [-0.449611, -0.893224, -0.021785, 0.011303],
    [-0.471397, -0.881921, -0.021501, 0.011834],
    [-0.492898, -0.870087, -0.021205, 0.012358],
    [-0.514103, -0.857729, -0.020895, 0.012875],
    [-0.534998, -0.844854, -0.020573, 0.013384],
    [-0.55557, -0.83147, -0.020238, 0.013885],
    [-0.575808, -0.817585, -0.019891, 0.014377],
    [-0.595699, -0.803208, -0.019532, 0.014861],
    [-0.615232, -0.788346, -0.019162, 0.015336],
    [-0.634393, -0.77301, -0.01878, 0.015802],
    [-0.653173, -0.757209, -0.018386, 0.016258],
    [-0.671559, -0.740951, -0.017982, 0.016704],
    [-0.689541, -0.724247, -0.017566, 0.01714],
    [-0.707107, -0.707107, -0.01714, 0.017566],
    [-0.724247, -0.689541, -0.016704, 0.017982],
    [-0.740951, -0.671559, -0.016258, 0.018386],
    [-0.757209, -0.653173, -0.015802, 0.01878],
    [-0.77301, -0.634393, -0.015336, 0.019162],
    [-0.788346, -0.615232, -0.014861, 0.019532],
    [-0.803208, -0.595699, -0.014377, 0.019891],
    [-0.817585, -0.575808, -0.013885, 0.020238],
    [-0.83147, -0.55557, -0.013384, 0.020573],
    [-0.844854, -0.534998, -0.012875, 0.020895],
    [-0.857729, -0.514103, -0.012358, 0.021205],
    [-0.870087, -0.492898, -0.011834, 0.021501],
    [-0.881921, -0.471397, -0.011303, 0.021785],
    [-0.893224, -0.449611, -0.010765, 0.022056],
    [-0.903989, -0.427555, -0.01022, 0.022314],
    [-0.91421, -0.405241, -0.00967, 0.022558],
    [-0.92388, -0.382683, -0.009113, 0.022788],
    [-0.932993, -0.359895, -0.008551, 0.023005],
    [-0.941544, -0.33689, -0.007984, 0.023208],
    [-0.949528, -0.313682, -0.007412, 0.023397],
    [-0.95694, -0.290285, -0.006836, 0.023572],
    [-0.963776, -0.266713, -0.006255, 0.023733],
    [-0.970031, -0.24298, -0.005671, 0.023879],
    [-0.975702, -0.219101, -0.005083, 0.024011],
    [-0.980785, -0.19509, -0.004492, 0.024128],
    [-0.985278, -0.170962, -0.003899, 0.024231],
    [-0.989177, -0.14673, -0.003303, 0.02432],
    [-0.99248, -0.122411, -0.002705, 0.024394],
    [-0.995185, -0.098017, -0.002106, 0.024453],
    [-0.99729, -0.073565, -0.001505, 0.024497],
    [-0.998795, -0.049068, -0.000903, 0.024526],
    [-0.999699, -0.024541, -0.000301, 0.024541],
    [-1.0, -0.0, 0.000301, 0.024541],
    [-0.999699, 0.024541, 0.000903, 0.024526],
    [-0.998795, 0.049068, 0.001505, 0.024497],
    [-0.99729, 0.073565, 0.002106, 0.024453],
    [-0.995185, 0.098017, 0.002705, 0.024394],
    [-0.99248, 0.122411, 0.003303, 0.02432],
    [-0.989177, 0.14673, 0.003899, 0.024231],
    [-0.985278, 0.170962, 0.004492, 0.024128],
    [-0.980785, 0.19509, 0.005083, 0.024011],
    [-0.975702, 0.219101, 0.005671, 0.023879],
    [-0.970031, 0.24298, 0.006255, 0.023733],
    [-0.963776, 0.266713, 0.006836, 0.023572],
    [-0.95694, 0.290285, 0.007412, 0.023397],
    [-0.949528, 0.313682, 0.007984, 0.023208],
    [-0.941544, 0.33689, 0.008551, 0.023005],
    [-0.932993, 0.359895, 0.009113, 0.022788],
    [-0.92388, 0.382683, 0.00967, 0.022558],
    [-0.91421, 0.405241, 0.01022, 0.022314],
    [-0.903989, 0.427555, 0.010765, 0.022056],
    [-0.893224, 0.449611, 0.011303, 0.021785],
    [-0.881921, 0.471397, 0.011834, 0.021501],
    [-0.870087, 0.492898, 0.012358, 0.021205],
    [-0.857729, 0.514103, 0.012875, 0.020895],
    [-0.844854, 0.534998, 0.013384, 0.020573],
    [-0.83147, 0.55557, 0.013885, 0.020238],
    [-0.817585, 0.575808, 0.014377, 0.019891],
    [-0.803208, 0.595699, 0.014861, 0.019532],
    [-0.788346, 0.615232, 0.015336, 0.019162],
    [-0.77301, 0.634393, 0.015802, 0.01878],
    [-0.757209, 0.653173, 0.016258, 0.018386],
    [-0.740951, 0.671559, 0.016704, 0.017982],
    [-0.724247, 0.689541, 0.01714, 0.017566],
    [-0.707107, 0.707107, 0.017566, 0.01714],
    [-0.689541, 0.724247, 0.017982, 0.016704],
    [-0.671559, 0.740951, 0.018386, 0.016258],
    [-0.653173, 0.757209, 0.01878, 0.015802],
    [-0.634393, 0.77301, 0.019162, 0.015336],
    [-0.615232, 0.788346, 0.019532, 0.014861],
    [-0.595699, 0.803208, 0.019891, 0.014377],
    [-0.575808, 0.817585, 0.020238, 0.013885],
    [-0.55557, 0.83147, 0.020573, 0.013384],
    [-0.534998, 0.844854, 0.020895, 0.012875],
    [-0.514103, 0.857729, 0.021205, 0.012358],
    [-0.492898, 0.870087, 0.021501, 0.011834],
    [-0.471397, 0.881921, 0.021785, 0.011303],
    [-0.449611, 0.893224, 0.022056, 0.010765],
    [-0.427555, 0.903989, 0.022314, 0.01022],
    [-0.405241, 0.91421, 0.022558, 0.00967],
    [-0.382683, 0.92388, 0.022788, 0.009113],
    [-0.359895, 0.932993, 0.023005, 0.008551],
    [-0.33689, 0.941544, 0.023208, 0.007984],
    [-0.313682, 0.949528, 0.023397, 0.007412],
    [-0.290285, 0.95694, 0.023572, 0.006836],
    [-0.266713, 0.963776, 0.023733, 0.006255],
    [-0.24298, 0.970031, 0.023879, 0.005671],
    [-0.219101, 0.975702, 0.024011, 0.005083],
    [-0.19509, 0.980785, 0.024128, 0.004492],
    [-0.170962, 0.985278, 0.024231, 0.003899],
    [-0.14673, 0.989177, 0.02432, 0.003303],
    [-0.122411, 0.99248, 0.024394, 0.002705],
    [-0.098017, 0.995185, 0.024453, 0.002106],
    [-0.073565, 0.99729, 0.024497, 0.001505],
    [-0.049068, 0.998795, 0.024526, 0.000903],
    [-0.024541, 0.999699, 0.024541, 0.000301],
];
